# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'evaluate.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(755, 484)
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.lineEdit_Evaluate = QtWidgets.QLineEdit(Form)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_Evaluate.setFont(font)
        self.lineEdit_Evaluate.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_Evaluate.setReadOnly(True)
        self.lineEdit_Evaluate.setObjectName("lineEdit_Evaluate")
        self.horizontalLayout.addWidget(self.lineEdit_Evaluate)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.comboBox_team = QtWidgets.QComboBox(Form)
        self.comboBox_team.setObjectName("comboBox_team")
        self.horizontalLayout_2.addWidget(self.comboBox_team)
        self.comboBox_match = QtWidgets.QComboBox(Form)
        self.comboBox_match.setObjectName("comboBox_match")
        self.comboBox_match.addItem("")
        self.comboBox_match.addItem("")
        self.comboBox_match.addItem("")
        self.comboBox_match.addItem("")
        self.comboBox_match.addItem("")
        self.horizontalLayout_2.addWidget(self.comboBox_match)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.line = QtWidgets.QFrame(Form)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.listView_players = QtWidgets.QListView(Form)
        self.listView_players.setObjectName("listView_players")
        self.gridLayout.addWidget(self.listView_players, 1, 0, 1, 1)
        self.listView_scores = QtWidgets.QListView(Form)
        self.listView_scores.setObjectName("listView_scores")
        self.gridLayout.addWidget(self.listView_scores, 1, 1, 1, 1)
        self.label_players = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_players.setFont(font)
        self.label_players.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.label_players.setObjectName("label_players")
        self.gridLayout.addWidget(self.label_players, 0, 0, 1, 1)
        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setObjectName("formLayout_2")
        self.label_points = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_points.setFont(font)
        self.label_points.setObjectName("label_points")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_points)
        self.lineEdit_points = QtWidgets.QLineEdit(Form)
        self.lineEdit_points.setReadOnly(True)
        self.lineEdit_points.setObjectName("lineEdit_points")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.lineEdit_points)
        self.gridLayout.addLayout(self.formLayout_2, 0, 1, 1, 1)
        self.verticalLayout.addLayout(self.gridLayout)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.pushButton = QtWidgets.QPushButton(Form)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_3.addWidget(self.pushButton)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)
        self.verticalLayout.addLayout(self.horizontalLayout_3)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        self.conn = sqlite3.connect("cric.db")  # Connect to the SQLite database
        self.cursor = self.conn.cursor()

        self.populateTeamComboBox()
        self.comboBox_team.currentIndexChanged.connect(self.onTeamComboBoxChanged)
        self.pushButton.clicked.connect(calculateTotalScore)

        
    def calculatePlayerScore(stats):
    score = 0

    # Batting rules
    runs = stats['runs']
    balls_faced = stats['balls_faced']
    strike_rate = (runs / balls_faced) * 100

    score += runs // 2
    if runs >= 50:
        score += 5
    if runs >= 100:
        score += 10
    if 80 <= strike_rate <= 100:
        score += 2
    elif strike_rate > 100:
        score += 4
    if stats['fours'] > 0:
        score += stats['fours']
    if stats['sixes'] > 0:
        score += 2 * stats['sixes']

    # Bowling rules
    wickets = stats['wickets']
    economy_rate = stats['economy_rate']

    score += 10 * wickets
    if wickets >= 3:
        score += 5
    if wickets >= 5:
        score += 10
    if 3.5 <= economy_rate <= 4.5:
        score += 4
    elif 2 <= economy_rate < 3.5:
        score += 7
    elif economy_rate < 2:
        score += 10

    # Fielding rules
    score += 10 * (stats['catches'] + stats['stumpings'] + stats['run_outs'])

    return score

def calculateTotalScore():
    total_score = 0

    # Iterate through each player's stats and calculate individual scores
    for player, stats in player_stats.items():
        individual_score = calculatePlayerScore(stats)
        total_score += individual_score
        # Display individual score in the list view
        # Assuming listView_scores is a QListWidget
        item = QtWidgets.QListWidgetItem(f"{player}: {individual_score}")
        self.listView_scores.addItem(item)

    # Display total score in the lineEdit_points
    self.lineEdit_points.setText(str(total_score))
        
    def populateTeamComboBox(self):
        self.comboBox_team.clear()
        teams = self.fetchTeamNamesFromDatabase()
        self.comboBox_team.addItems(teams)

    def fetchTeamNamesFromDatabase(self):
        self.cursor.execute("SELECT name FROM teams")  # Adjust query as needed
        team_names = [row[0] for row in self.cursor.fetchall()]
        return team_names

    def onTeamComboBoxChanged(self):
        selected_team = self.comboBox_team.currentText()
        players = self.fetchPlayersForTeamFromDatabase(selected_team)
        self.updatePlayerListView(players)

    def fetchPlayersForTeamFromDatabase(self, team_name):
        self.cursor.execute("SELECT players FROM teams WHERE name=?", (team_name,))
        players = [row[0] for row in self.cursor.fetchall()]
        return players

    

    def closeEvent(self, event):
        self.conn.close()
        event.accept()

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.lineEdit_Evaluate.setText(_translate("Form", "Evaluate the Performance of Your Fantasy Team"))
        self.comboBox_team.setPlaceholderText(_translate("Form", "Select Team"))
        self.comboBox_match.setPlaceholderText(_translate("Form", "Select Match"))
        self.comboBox_match.setItemText(0, _translate("Form", "Match 1"))
        self.comboBox_match.setItemText(1, _translate("Form", "Match 2"))
        self.comboBox_match.setItemText(2, _translate("Form", "Match 3"))
        self.comboBox_match.setItemText(3, _translate("Form", "Match 4"))
        self.comboBox_match.setItemText(4, _translate("Form", "Match 5"))
        self.label_players.setText(_translate("Form", "Players"))
        self.label_points.setText(_translate("Form", "Points :"))
        self.pushButton.setText(_translate("Form", "Calculate Score"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
