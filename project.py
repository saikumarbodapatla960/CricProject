# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'project.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QMessageBox, QDialog, QPushButton, QLabel
from PyQt5.QtCore import Qt
from evaluate import Ui_Form
import sqlite3
import sys



class ErrorMessageDialog(QDialog):
    def __init__(self, message):
        super().__init__()

        self.setWindowTitle("Error")
        self.setFixedSize(300, 150)

        self.label = QLabel(message, self)
        self.label.setGeometry(20, 20, 260, 60)
        self.label.setAlignment(Qt.AlignCenter)

        self.ok_button = QPushButton("OK", self)
        self.ok_button.setGeometry(110, 100, 80, 30)
        self.ok_button.clicked.connect(self.accept)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1131, 600)
        MainWindow.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setAutoFillBackground(True)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 30, 1097, 71))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox.setFont(font)
        self.groupBox.setAutoFillBackground(True)
        self.groupBox.setStyleSheet("")
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.label_batsmen = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.label_batsmen.setFont(font)
        self.label_batsmen.setObjectName("label_batsmen")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_batsmen)
        self.lineEdit_batsmen = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_batsmen.setMinimumSize(QtCore.QSize(91, 24))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.lineEdit_batsmen.setFont(font)
        self.lineEdit_batsmen.setAutoFillBackground(True)
        self.lineEdit_batsmen.setReadOnly(True)
        self.lineEdit_batsmen.setObjectName("lineEdit_batsmen")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.lineEdit_batsmen)
        self.horizontalLayout_7.addLayout(self.formLayout)
        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setObjectName("formLayout_2")
        self.label_bowler = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.label_bowler.setFont(font)
        self.label_bowler.setObjectName("label_bowler")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_bowler)
        self.lineEdit_bowler = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_bowler.setMinimumSize(QtCore.QSize(91, 24))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.lineEdit_bowler.setFont(font)
        self.lineEdit_bowler.setReadOnly(True)
        self.lineEdit_bowler.setObjectName("lineEdit_bowler")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.lineEdit_bowler)
        self.horizontalLayout_7.addLayout(self.formLayout_2)
        self.formLayout_3 = QtWidgets.QFormLayout()
        self.formLayout_3.setObjectName("formLayout_3")
        self.label_ar = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.label_ar.setFont(font)
        self.label_ar.setObjectName("label_ar")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_ar)
        self.lineEdit_ar = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_ar.setMinimumSize(QtCore.QSize(91, 24))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.lineEdit_ar.setFont(font)
        self.lineEdit_ar.setReadOnly(True)
        self.lineEdit_ar.setObjectName("lineEdit_ar")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.lineEdit_ar)
        self.horizontalLayout_7.addLayout(self.formLayout_3)
        self.formLayout_4 = QtWidgets.QFormLayout()
        self.formLayout_4.setObjectName("formLayout_4")
        self.label_wk = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.label_wk.setFont(font)
        self.label_wk.setObjectName("label_wk")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_wk)
        self.lineEdit_wk = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_wk.setMinimumSize(QtCore.QSize(91, 24))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.lineEdit_wk.setFont(font)
        self.lineEdit_wk.setReadOnly(True)
        self.lineEdit_wk.setObjectName("lineEdit_wk")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.lineEdit_wk)
        self.horizontalLayout_7.addLayout(self.formLayout_4)
        self.listWidget_select = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget_select.setGeometry(QtCore.QRect(50, 220, 461, 281))
        self.listWidget_select.setLayoutMode(QtWidgets.QListView.Batched)
        self.listWidget_select.setObjectName("listWidget_select")
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.listWidget_select.addItem(item)
        self.listWidget_show = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget_show.setGeometry(QtCore.QRect(580, 220, 471, 281))
        self.listWidget_show.setObjectName("listWidget_show")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(30, 100, 1061, 48))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_pa = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_pa.setFont(font)
        self.label_pa.setObjectName("label_pa")
        self.horizontalLayout_8.addWidget(self.label_pa)
        self.lineEdit_pa = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_pa.setObjectName("lineEdit_pa")
        self.lineEdit_pa.setReadOnly(True)
        self.horizontalLayout_8.addWidget(self.lineEdit_pa)
        spacerItem = QtWidgets.QSpacerItem(198, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem)
        self.label_pu = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_pu.setFont(font)
        self.label_pu.setObjectName("label_pu")
        self.horizontalLayout_8.addWidget(self.label_pu)
        self.lineEdit_pu = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_pu.setObjectName("lineEdit_pu")
        self.lineEdit_pu.setReadOnly(True)
        self.horizontalLayout_8.addWidget(self.lineEdit_pu)
        spacerItem1 = QtWidgets.QSpacerItem(198, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem1)
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(520, 151, 51, 351))
        self.textBrowser.setObjectName("textBrowser")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(50, 150, 461, 61))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.radioButton_bat = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_bat.setFont(font)
        self.radioButton_bat.setObjectName("radioButton_bat")
        self.horizontalLayout_9.addWidget(self.radioButton_bat)
        self.radioButton_bow = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_bow.setFont(font)
        self.radioButton_bow.setObjectName("radioButton_bow")
        self.horizontalLayout_9.addWidget(self.radioButton_bow)
        self.radioButton_ar = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_ar.setFont(font)
        self.radioButton_ar.setObjectName("radioButton_ar")
        self.horizontalLayout_9.addWidget(self.radioButton_ar)
        self.radioButton_wk = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_wk.setFont(font)
        self.radioButton_wk.setObjectName("radioButton_wk")
        self.horizontalLayout_9.addWidget(self.radioButton_wk)
        self.formLayoutWidget_5 = QtWidgets.QWidget(self.centralwidget)
        self.formLayoutWidget_5.setGeometry(QtCore.QRect(580, 140, 471, 80))
        self.formLayoutWidget_5.setObjectName("formLayoutWidget_5")
        self.formLayout_5 = QtWidgets.QFormLayout(self.formLayoutWidget_5)
        self.formLayout_5.setLabelAlignment(QtCore.Qt.AlignCenter)
        self.formLayout_5.setFormAlignment(QtCore.Qt.AlignCenter)
        self.formLayout_5.setContentsMargins(0, 0, 0, 0)
        self.formLayout_5.setObjectName("formLayout_5")
        self.label_TeamName = QtWidgets.QLabel(self.formLayoutWidget_5)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_TeamName.setFont(font)
        self.label_TeamName.setObjectName("label_TeamName")
        self.formLayout_5.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_TeamName)
        self.lineEdit_TeamName = QtWidgets.QLineEdit(self.formLayoutWidget_5)
        self.lineEdit_TeamName.setReadOnly(True)
        self.lineEdit_TeamName.setObjectName("lineEdit_TeamName")
        self.formLayout_5.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.lineEdit_TeamName)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1131, 26))
        self.menubar.setObjectName("menubar")
        self.menuManage_Teams = QtWidgets.QMenu(self.menubar)
        self.menuManage_Teams.setObjectName("menuManage_Teams")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew_Team = QtWidgets.QAction(MainWindow)
        self.actionNew_Team.setObjectName("actionNew_Team")
        self.actionSave_Team = QtWidgets.QAction(MainWindow)
        self.actionSave_Team.setObjectName("actionSave_Team")
        self.actionOpen_Team = QtWidgets.QAction(MainWindow)
        self.actionOpen_Team.setObjectName("actionOpen_Team")
        self.actionEvaluate_Team = QtWidgets.QAction(MainWindow)
        self.actionEvaluate_Team.setObjectName("actionEvaluate_Team")
        self.menuManage_Teams.addAction(self.actionNew_Team)
        self.menuManage_Teams.addSeparator()
        self.menuManage_Teams.addAction(self.actionOpen_Team)
        self.menuManage_Teams.addSeparator()
        self.menuManage_Teams.addAction(self.actionSave_Team)
        self.menuManage_Teams.addSeparator()
        self.menuManage_Teams.addAction(self.actionEvaluate_Team)
        self.menuManage_Teams.addSeparator()
        self.menubar.addAction(self.menuManage_Teams.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


        self.radioButton_bat.setChecked(True)  # Set BAT radio button as default
        self.lineEdit_TeamName.setText("My Team")

        self.conn = sqlite3.connect("cric.db")  # Connect to the SQLite database
        self.cursor = self.conn.cursor()

        self.radioButton_bat.setChecked(True)   # Radio buttons to show the players list
        self.radioButton_bow.toggled.connect(self.populateList)
        self.radioButton_ar.toggled.connect(self.populateList)
        self.radioButton_wk.toggled.connect(self.populateList)
        self.radioButton_bat.toggled.connect(self.populateList)

        self.listWidget_select.itemDoubleClicked.connect(self.addPlayerToTeam)   # Add players
        self.listWidget_show.itemDoubleClicked.connect(self.removePlayerFromTeam)   # Remove players

        self.actionNew_Team.triggered.connect(self.resetTeamName)
        self.lineEdit_TeamName.editingFinished.connect(self.teamNameEditingFinished)
        self.actionSave_Team.triggered.connect(self.saveTeam)
        self.actionOpen_Team.triggered.connect(self.resetTeamName)
        self.lineEdit_TeamName.editingFinished.connect(self.openTeam)
        self.actionEvaluate_Team.triggered.connect(self.openEvaluateWidget)
        
        self.populateList()
        self.resetTeam()

    def openEvaluateWidget(self):
        print("Opening Evaluate Widget...")
        evaluate_widget = Ui_Form()
        print("Evaluate Widget created.")
        evaluate_widget.show()
        
        return print("Evaluate Widget shown.")

    
    def openTeam(self):
        self.lineEdit_TeamName.setReadOnly(True)
        selected_team = self.lineEdit_TeamName.text()  

        if selected_team is not None:
            # Retrieve selected players for the chosen team from the database
            selected_players = self.getSelectedPlayersFromDatabase(selected_team)

            if selected_players:
                # Display the list of selected players in the QListWidget
                self.listWidget_show.clear()  # Clear the list before adding new items
                self.listWidget_show.addItems(selected_players)
            else:
                self.showErrorMessage("Error No players found for team '{selected_team}'.")

    def getSelectedPlayersFromDatabase(self, team_name):
        try:
            self.cursor.execute("SELECT players FROM teams WHERE name = ?", (team_name,))
            result = self.cursor.fetchone()

            if result:
                players_str = result[0]
                selected_players = [player.strip() for player in players_str.split(',')]
                return selected_players
            else:
                return []
        except sqlite3.Error as e:
            return []

    def saveTeam(self):
        try:
            selected_players = self.getSelectedPlayers()
            team_name = self.lineEdit_TeamName.text()
            if len(selected_players) != 11:
                self.showErrorMessage("Error! A team must have exactly 11 players.")
                return

            # Save the team to the database
            if self.saveTeamToDatabase(team_name, selected_players):
                self.showErrorMessage("Success! Team saved successfully.")
            else:
                self.showErrorMessage("Error! Failed to save the team.")
        except:
            self.showErrorMessage("Save team error")

    def saveTeamToDatabase(self, team_name, selected_players):
        try:
            players_str = ', '.join(selected_players)
            self.cursor.execute("INSERT INTO teams (name, players) VALUES (?, ?)", (team_name, players_str))
            self.conn.commit()
            return True
        except:
                self.showErrorMessage("save team to database error")
                
    def getSelectedPlayers(self):
        try:
            selected_players = []

            for index in range(self.listWidget_show.count()):
                item = self.listWidget_show.item(index)
                player_name = item.text()
                selected_players.append(player_name)

            return selected_players
        except:
            self.showErrorMessage("get selected players error")
            
    def resetTeamName(self):
        # Clear the team name and make the QLineEdit editable
        self.lineEdit_TeamName.clear()
        self.lineEdit_TeamName.setReadOnly(False)
        self.lineEdit_TeamName.setFocus()  # Set focus for user convenience
        self.resetTeam()

    def teamNameEditingFinished(self):
        # After the user presses Enter, set the QLineEdit back to read-only
        self.lineEdit_TeamName.setReadOnly(True)

    def populateList(self):
        category = self.getSelectedCategory()

        self.listWidget_select.clear()

        self.cursor.execute("SELECT player FROM stats WHERE category = ?", (category,))
        players = self.cursor.fetchall()

        for player in players:
            self.listWidget_select.addItem(player[0])

    def getSelectedCategory(self):
        if self.radioButton_bat.isChecked():
            return "BAT"
        elif self.radioButton_bow.isChecked():
            return "BWL"
        elif self.radioButton_ar.isChecked():
            return "AR"
        elif self.radioButton_wk.isChecked():
            return "WK"
        
        
    def addPlayerToTeam(self, item):
        player_name = item.text()
        player_points = 100  # Each player costs 100 points
        player_category = self.getPlayerCategory(player_name)

        if self.points_available >= player_points:
            if self.getSelectedCategory() == "WK" and self.wk_count >= 1:
                self.showErrorMessage("Each team should have only 1 Wicket Keeper.")
                return
            elif self.getSelectedCategory() == "AR" and self.ar_count >= 2:
                self.showErrorMessage("Each team should have only 2 All Rounders.")
                return

            self.listWidget_select.takeItem(self.listWidget_select.row(item))
            self.listWidget_show.addItem(item.text())

            # Remove the player from the selection list
            row = self.listWidget_select.row(item)
            self.listWidget_select.takeItem(row)

            self.selected_players[player_category] += 1
            self.points_available -= player_points
            self.points_used += player_points
            self.updatePointsLabels()

            if self.getSelectedCategory() == "WK":
                self.wk_count += 1
            elif self.getSelectedCategory() == "AR":
                self.ar_count += 1

    def removePlayerFromTeam(self, item):
        player_name = item.text()
        player_points = 100
        player_category = self.getPlayerCategory(player_name)

        self.listWidget_show.takeItem(self.listWidget_show.row(item))
        self.listWidget_select.addItem(item.text())

        # Add the player to the selection list
        row = self.listWidget_show.row(item)
        self.listWidget_show.takeItem(row)

        self.selected_players[player_category] -= 1
        self.points_available += player_points
        self.points_used -= player_points
        self.updatePointsLabels()

        if self.getSelectedCategory() == "WK":
            self.wk_count -= 1
        elif self.getSelectedCategory() == "AR":
            self.ar_count -= 1

    def updatePointsLabels(self):
        self.lineEdit_pa.setText(str(self.points_available))
        self.lineEdit_pu.setText(str(self.points_used))
        self.lineEdit_batsmen.setText(str(self.selected_players["BAT"]))
        self.lineEdit_bowler.setText(str(self.selected_players["BWL"]))
        self.lineEdit_ar.setText(str(self.selected_players["AR"]))
        self.lineEdit_wk.setText(str(self.selected_players["WK"]))

    def getPlayerCategory(self, player_name):
        self.cursor.execute("SELECT category FROM stats WHERE player = ?", (player_name,))
        result = self.cursor.fetchone()
        if result:
            return result[0]
        return None

    def resetTeam(self):
        self.listWidget_show.clear()
        self.points_available = 1100
        self.points_used = 0
        self.wk_count = 0
        self.ar_count = 0
        self.selected_players = {"BAT": 0, "BWL": 0, "AR": 0, "WK": 0}

        self.updatePointsLabels()

        self.listWidget_show.clear()
        self.listWidget_select.clear()
        self.populateList()
            

    def showErrorMessage(self, message):
        dialog = ErrorMessageDialog(message)
        dialog.exec_()

    def closeEvent(self, event):
        self.conn.close()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "Your Selections"))
        self.label_batsmen.setText(_translate("MainWindow", "Batsmen (BAT) :"))
        self.label_bowler.setText(_translate("MainWindow", "Bowler (BOW) :"))
        self.label_ar.setText(_translate("MainWindow", "All-Rounder (AR) :"))
        self.label_wk.setText(_translate("MainWindow", "Wicket-Keeper (WK) :"))
        __sortingEnabled = self.listWidget_select.isSortingEnabled()
        self.listWidget_select.setSortingEnabled(False)
        self.listWidget_select.setSortingEnabled(__sortingEnabled)
        self.label_pa.setText(_translate("MainWindow", "Points Available :"))
        self.label_pu.setText(_translate("MainWindow", "Points Used :"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">&gt;</span></p></body></html>"))
        self.radioButton_bat.setText(_translate("MainWindow", "BAT"))
        self.radioButton_bow.setText(_translate("MainWindow", "BOW"))
        self.radioButton_ar.setText(_translate("MainWindow", "AR"))
        self.radioButton_wk.setText(_translate("MainWindow", "WK"))
        self.label_TeamName.setText(_translate("MainWindow", "Team Name :"))
        self.menuManage_Teams.setTitle(_translate("MainWindow", "Manage Teams"))
        self.actionNew_Team.setText(_translate("MainWindow", "New Team"))
        self.actionSave_Team.setText(_translate("MainWindow", "Save Team"))
        self.actionOpen_Team.setText(_translate("MainWindow", "Open Team"))
        self.actionEvaluate_Team.setText(_translate("MainWindow", "Evaluate Team"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
